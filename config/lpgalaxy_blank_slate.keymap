/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

 // Q6's plank keymap

// header
#include <behaviors.dtsi>  // for &kp, &mo, &trans, &none, &bootloader ....
#include <dt-bindings/zmk/keys.h>  // for keycodes (A, B, C, ..., ESC, TAB, ...)
#include <dt-bindings/zmk/bt.h>  // for BT_SEL and BT_CLR
#include <dt-bindings/zmk/outputs.h>  // for usb outputs or bluetooth outputs
#include <dt-bindings/zmk/mouse.h>  // mouse key

// layers
#define ARR_L 1
#define NUM_L 2
#define SYM_L 3
#define MAC_L 4
#define HAN_L 5
#define ONE_L 6
#define BLT_L 7

// lt config
&lt { quick_tap_ms = <200>; };

// keymap
/ {
    chosen {zmk,matrix_transform = &ortho_transform;};
    
    // tap dance term
    tap_dances {
    	rshifty: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp RSHFT>, <&caps_word>;
	    };
    };

    // conditional layer
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <7>;
        };
    };

    // macros
    macros {
        lg_m: lg_m {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_tap &kp LANG1>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_tap &kp LANG1>
                ;
        };

        win_off: win_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LWIN>
                , <&macro_tap     &kp X>
                , <&macro_release &kp LWIN>
                , <&macro_tap     &kp U &kp U>
                ;
        };

        siql: siql {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_tap     &kp S &kp I &kp Q &kp L &kp N4 &kp N2 &kp N9 &kp N6>
                ;
        };
    };

    // keymap
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            bindings = <
&kp ESC    &kp Q      &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O        &kp P         &kp DEL
&mo ARR_L  &kp A      &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L        &kp BSPC      &kp ENTER
&kp LSHFT  &kp Z      &kp X      &kp C       &kp V          &mo SYM_L      &kp B            &kp N          &kp M       &out OUT_TOG &lt 5 LANG1   &rshifty
&mo MAC_L  &kp GLOBE  &kp LALT   &kp LWIN    &kp LCTRL      &kp SPACE      &kp SPACE        &mo NUM_L      &kp RCTRL   &kp RWIN     &kp RALT      &mo ONE_L
            >;
        };

        arr_layer {
            display-name = "Arrow";
            bindings = <
&kp TAB     &kp PG_UP    &kp LS(LEFT)   &kp UP        &kp LS(RIGHT)   &kp DEL      &trans      &kp N7         &kp N8      &kp N9     &kp DEL             &kp PSCRN
&none       &kp PG_DN    &kp LEFT       &kp DOWN      &kp RIGHT       &kp BSPC     &trans      &kp N4         &kp N5      &kp N6     &trans              &trans
&kp CAPS    &mkp MB4     &kp HOME       &mkp MB5      &kp END         &kp ENTER    &kp INS     &kp N1         &kp N2      &kp N3     &kp LC(LG(SPACE))   &trans
&trans      &trans       &kp LALT       &kp LWIN      &kp LCTRL       &kp SPACE    &kp SPACE   &trans         &kp N0      &trans     &trans              &trans
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
&kp KP_NUM  &kp N1      &kp N2    &kp N3    &kp N4    &kp N5       &kp N6       &kp KP_N7  &kp KP_N8   &kp KP_N9    &kp N0        &kp KP_EQUAL
&kp TAB     &kp F1      &kp F2    &kp F3    &kp F4    &kp F5       &kp F6       &kp KP_N4  &kp KP_N5   &kp KP_N6    &kp BSPC      &kp KP_ENTER
&kp CAPS    &kp F7      &kp F8    &kp F9    &kp F10   &kp F11      &kp F12      &kp KP_N1  &kp KP_N2   &kp KP_N3    &kp KP_PLUS   &kp KP_MULTIPLY
&trans      &trans      &trans    &trans    &trans    &kp SPACE    &kp SPACE    &none      &kp KP_N0   &kp KP_DOT   &kp KP_MINUS  &kp KP_DIVIDE
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
&kp GRAVE  &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR   &kp PERCENT  &kp CARET    &kp AMPS   &kp ASTRK   &kp LPAR    &kp RPAR   &kp UNDER
&kp TILDE  &kp LBKT   &kp RBKT   &kp LBRC   &kp RBRC     &kp BSLH     &kp PIPE     &kp LT     &kp GT      &kp QMARK   &kp SEMI   &kp SQT
&kp EQUAL  &kp PLUS   &kp MINUS  &kp STAR   &kp SLASH    &none        &kp K_APP    &kp COMMA  &kp DOT     &kp SLASH   &kp COLON  &kp DQT
&trans     &trans     &trans     &trans     &trans       &trans       &trans       &trans     &trans      &trans      &trans     &trans
            >;
        };

        macro_layer {
            display-name = "Macro";
            bindings = <
&win_off  &kp C_PREV    &kp C_STOP    &kp C_PP      &kp C_NEXT    &trans        &trans    &kp C_BRI_DN &kp C_BRI_UP &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_UP
&trans    &trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans       &trans       &trans         &trans
&siql     &trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans       &trans       &trans         &trans
&none     &trans        &trans        &trans        &trans        &trans        &trans    &trans       &trans       &trans       &trans         &trans
            >;
        };

        hangul_layer {
            display-name = "Hangul";
            bindings = <
&trans    &lg_m Q    &lg_m W    &lg_m E    &lg_m R    &lg_m T    &lg_m Y    &lg_m U    &lg_m I    &lg_m O    &lg_m P    &trans
&trans    &lg_m A    &lg_m S    &lg_m D    &lg_m F    &lg_m G    &lg_m H    &lg_m J    &lg_m K    &lg_m L    &trans     &trans
&trans    &lg_m Z    &lg_m X    &lg_m C    &lg_m V    &trans     &lg_m B    &lg_m N    &lg_m M    &kp CAPS   &none      &trans
&trans    &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
            >;
        };

        onehand_layer {
            display-name = "Onehand";
            bindings = <
&bt BT_CLR     &out OUT_BLE    &out OUT_USB     &bt BT_PRV      &bt BT_NXT      &trans          &kp ESC    &kp Q     &kp W     &kp E     &kp R     &kp T
&out OUT_TOG   &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &kp TAB    &kp A     &kp S     &kp D     &kp F     &kp G
&trans         &bt BT_DISC 0   &bt BT_DISC 1    &bt BT_DISC 2   &bt BT_DISC 3   &bt BT_DISC 4   &sk LSHFT  &kp Z     &kp X     &kp C     &kp V     &sk LWIN
&bt BT_CLR_ALL &trans          &trans           &trans          &trans          &trans          &sk LCTRL  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none
            >;
        };

        bluetooth_layer {
            display-name = "Bluetooth";
            bindings = <
&bt BT_CLR_ALL &bt BT_CLR      &out OUT_BLE     &out OUT_USB    &out OUT_TOG    &trans          &trans    &trans    &trans       &trans       &trans    &trans
&none          &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans    &trans    &trans       &trans       &trans    &trans
&trans         &bt BT_DISC 0   &bt BT_DISC 1    &bt BT_DISC 2   &bt BT_DISC 3   &bt BT_DISC 4   &trans    &trans    &trans       &trans       &trans    &trans
&trans         &bt BT_PRV      &bt BT_NXT       &trans          &trans          &trans          &trans    &none     &trans       &trans       &trans    &trans
            >;
        };
    };
};
